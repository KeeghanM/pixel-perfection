---
import '../styles/global.scss'
interface Props {
  title: string
  description: string
}
const { title, description } = Astro.props
---

<!DOCTYPE html>
<html
  lang='en'
  class='dark'
>
  <head>
    <meta charset='UTF-8' />
    <meta
      name='description'
      content={description}
    />
    <meta
      name='viewport'
      content='width=device-width'
    />
    <link
      rel='icon'
      type='image/svg+xml'
      href='/favicon.svg'
    />
    <meta
      name='generator'
      content={Astro.generator}
    />
    <link
      rel='preconnect'
      href='https://fonts.googleapis.com'
    />
    <link
      rel='preconnect'
      href='https://fonts.gstatic.com'
      crossorigin
    />
    <link
      href='https://fonts.googleapis.com/css2?family=Anton&family=Lato&display=swap'
      rel='stylesheet'
    />
    <title>{title}</title>
  </head>
  <body
    class='bg-white text-gray-800 dark:text-gray-100 dark:bg-gray-800 overflow-x-hidden -mb-4 font-lato'
  >
    <slot />
  </body>
</html>

<style is:global>
  html {
    scroll-behavior: smooth;
  }
  .cm-editor {
    height: 300px;
    max-height: 300px;
  }
</style>

<script>
  const observerOptions = {
    threshold: 0.1,
    rootMargin: '0px 0px -50px 0px',
  }

  const observer = new IntersectionObserver((entries) => {
    entries.forEach((entry) => {
      if (entry.isIntersecting) {
        entry.target.classList.add('visible')
      }
    })
  }, observerOptions)

  // Observe all fade-in elements
  document.querySelectorAll('.fade-in').forEach((el) => {
    observer.observe(el)
  })

  // Navigation background on scroll
  window.addEventListener('scroll', () => {
    const nav = document.querySelector('.nav') as HTMLElement
    if (!nav) return

    if (window.scrollY > 100) {
      nav.style.background = 'rgba(10, 10, 10, 0.95)'
    } else {
      nav.style.background = 'var(--glass-bg)'
    }
  })
</script>
