---
const one = 1
---

<div
  id='hero-container'
  class='relative flex flex-col items-center justify-center w-full h-screen'
>
  <div
    id='hero'
    class='duration-300 transition-colors text-center'
    style='display: flex; flex-direction: column; align-items: center; justify-content: center; position:sticky; top:0; width:100%;'
  >
    <h1
      class='text-2xl md:text-4xl lg:text-6xl flex flex-col items-center w-fit mx-auto text-center select-none'
    >
      <span
        id='brand'
        class='font-extrabold text-4xl md:text-6xl lg:text-8xl mb-4'
        >PixelPerfection</span
      ><span id='tag'>Can you spot the difference?</span>
    </h1>
  </div>
</div>

<script>
  import { lerp } from '../../lib/lerp'
  const baseFontSize = parseFloat(
    window.getComputedStyle(document.documentElement).fontSize
  )

  const initialWindowHeight = window.innerHeight
  const finalScrollPosition = initialWindowHeight * 0.8

  const percentage = () => {
    const scrollPosition = window.scrollY
    const percentage = scrollPosition / finalScrollPosition
    return Math.min(Math.max(percentage, 0), 1)
  }

  const heroContainer = document.getElementById(
    'hero-container'
  ) as HTMLDivElement
  const hero = document.getElementById('hero') as HTMLDivElement
  const heroTitle = hero?.querySelector('h1') as HTMLHeadingElement
  const heroTitleSpan = heroTitle?.querySelector(
    'span#brand'
  ) as HTMLSpanElement

  const heroTitleStyle = window.getComputedStyle(heroTitle)
  const heroTitleFontSize = heroTitleStyle.getPropertyValue('font-size')
  const startingTitleSize =
    Number(heroTitleFontSize?.replace('px', '')) / baseFontSize

  const heroTitleSpanStyle = window.getComputedStyle(heroTitleSpan)
  const heroTitleSpanFontSize = heroTitleSpanStyle.getPropertyValue('font-size')
  const startingTitleSpanSize =
    Number(heroTitleSpanFontSize?.replace('px', '')) / baseFontSize

  const heroTitleTagline = heroTitle?.querySelector(
    'span#tag'
  ) as HTMLSpanElement

  const handleScroll = () => {
    if (!hero || !heroTitle || !heroTitleSpan || !heroContainer) return

    const progress = percentage()
    const heroHeight = lerp(100, 10, progress)
    hero.style.height = `${heroHeight}vh`

    const titleSize = lerp(startingTitleSize, 1.875, progress)
    heroTitle?.style.setProperty('font-size', `${titleSize}rem`)

    const titleSpanSize = lerp(startingTitleSpanSize, 2.5, progress)
    heroTitleSpan?.style.setProperty('font-size', `${titleSpanSize}rem`)

    if (progress === 1) {
      if (heroTitle.style.flexDirection === 'row') return

      heroTitleSpan.classList.remove('mb-4')
      heroTitleSpan.classList.add('text-blue-500')
      hero.classList.add('bg-white', 'dark:bg-gray-900')
      heroContainer.classList.add('sticky', 'top-0', 'z-10')
      heroContainer.classList.remove('items-center', 'justify-center')
      heroTitleTagline?.classList.add('hidden')
    } else {
      if (heroTitle.style.flexDirection === 'column') return

      heroTitleSpan.classList.add('mb-4')
      heroTitleSpan.classList.remove('text-blue-500')
      hero.classList.remove('bg-white', 'dark:bg-gray-900')
      heroContainer.classList.remove('sticky', 'top-0', 'z-10')
      heroContainer.classList.add('items-center', 'justify-center')
      heroTitleTagline?.classList.remove('hidden')
    }
  }

  const debouncedHandleScroll = () => {
    window.requestAnimationFrame(handleScroll)
  }

  window.addEventListener('scroll', debouncedHandleScroll)
</script>
